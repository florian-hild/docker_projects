---

services:
  unifi-network-application:
    container_name: unifi
    image: 'lscr.io/linuxserver/unifi-network-application:latest'
    init: false
    privileged: false
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "--max-time", "5", "--head", "--location", "--fail", "--insecure", "--silent", "https://127.0.0.1:8443/"]
      interval: 30s
      timeout: 5s
      retries: 5
    environment:
      - 'TZ=Europe/Berlin'
      - 'MONGO_USER=unifi'
      - 'MONGO_PASS=uN!fiD82O24'
      - 'MONGO_HOST=unifi-db'
      - 'MONGO_PORT=27017'
      - 'MONGO_DBNAME=unifidb'
    volumes:
      - '/etc/localtime:/etc/localtime:ro'
      - '/etc/timezone:/etc/timezone:ro'
      - 'config:/config:rw'
    networks:
      - frontend
      - backend
    ports:
      - 0.0.0.0:8443:8443/tcp # Application GUI/API
      - 0.0.0.0:3478:3478/udp # STUN
      - 0.0.0.0:10001:10001/udp # Device discovery
      - 0.0.0.0:8080:8080/tcp # Device and application communication
      # - 1900:1900/udp # Make application discoverable on L2 network (optional)
      # - 8843:8843 # HTTPS portal redirection (optional)
      # - 8880:8880 # HTTP portal redirection (optional)
      # - 6789:6789 # UniFi mobile speed test (optional)
      # - 5514:5514/udp # Remote syslog capture (optional)
    depends_on:
      - mongodb

  mongodb:
    container_name: unifi-db
    image: 'mongo:4.4.6'
    init: false
    privileged: false
    restart: unless-stopped
    stop_grace_period: 60s
    healthcheck:
      test: ["CMD", "mongo", "--quiet", "--eval", "db.adminCommand('ping').ok"]
      interval: 30s
      timeout: 5s
      retries: 5
    environment:
      - 'TZ=Europe/Berlin'
    volumes:
      - '/etc/localtime:/etc/localtime:ro'
      - '/etc/timezone:/etc/timezone:ro'
      - 'db-data:/data/db:rw'
      - 'db-config:/data/configdb:rw'
      - './mongo/init/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro'
    networks:
      - backend

networks:
  frontend:
    name: unifi-frontend
    driver: bridge
  backend:
    name: unifi-backend
    driver: bridge

volumes:
  config:
    driver: local
  db-data:
    driver: local
  db-config:
    driver: local

...
